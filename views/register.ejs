
<% include ./partials/header %> 



<div id="progress"></div>

<div class="center">
  <div id="register">

   <i id="progressButton" class="ion-android-arrow-forward next"></i>

    <div id="inputContainer">
      <input id="inputField" required autofocus />
      <label id="inputLabel"></label>
      <div id="inputProgress"></div>
    </div>

  </div>
</div>

<form action="/register" method="post" id="myForm">
   <input type="hidden" name="username" placeholder="username">
    <input type="hidden" name="lastname" placeholder="lastname">
    <input type="hidden" name="email" placeholder="email">
    <input type="hidden" name="phonenuber" placeholder="phonenuber">
    <input type="hidden" name="sex" placeholder="sex">
    <input type="hidden" name="school" placeholder="school">
    <input type="hidden" name="childname" placeholder="childname">
    <input type="hidden" name="childage" placeholder="childage">
    <input type="hidden" name="address" placeholder="address">
    <input type="hidden" name="prof" placeholder="prof">
</form>

<style>
    body {
  margin: 0;
  background: #25A3FF;
  font-family: 'Roboto', sans-serif;
}

h1 {
  position: relative;
  color: #fff;
  opacity: 0;
  transition: .8s ease-in-out;
}

#progress {
  position: absolute;
  background: #0069ec;
  height: 100%;
  width: 0;
  transition: width 0.2s ease-in-out;
}

.center {
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

/******
  Form
 ******/

#register {
  background: #fff;
  position: relative;
  width: 410px;
  padding: 2px 15px 20px 15px;
  box-shadow: 0 16px 24px 2px rgba(0,0,0,0.14), 0 6px 30px 5px rgba(0,0,0,0.12), 0 8px 10px -5px rgba(0,0,0,0.3);
  transition: transform .1s ease-in-out;
}

#register.close {
  width: 0;
  padding: 0;
  overflow: hidden;
  transition: .8s ease-in-out;
  box-shadow: 0 16px 24px 2px rgba(0,0,0,0);
}

.next {
  position: absolute;
  right: 20px;
  bottom: 10px;
  font-size: 40px;
  color: #25a3ff;
  float: right;
  cursor: pointer;
}
.next:hover {color: #333}
.wrong .next {color: #ff2d26}
.close .next {color: #fff}

#inputContainer {
  position: relative;
  opacity: 0;
  width: 350px;
  margin-top: 25px;
  transition: opacity .3s ease-in-out;
}

#inputContainer input {
  width: 100%;
  padding: 0 5px;
  border: none;
  font-size: 20px;
  font-weight: bold;
  outline: 0;
  background: transparent;
  box-shadow:none;
}

#inputLabel {
  position: absolute;
  pointer-events: none;
  top: 0;
  left: 0;
  font-size: 20px;
  font-weight: bold;
  padding: 0 5px;
  transition: .2s ease-in-out;
}

#inputContainer input:valid + #inputLabel {
  top: -15px;
  font-size: 11px;
  font-weight: normal;
  color: #9e9e9e;
}

#inputProgress {
  position: absolute;
  border-bottom: 2px solid #25a3ff;
  padding: 3px 0;
  width: 0;
  transition: width .6s ease-in-out;
}

.wrong #inputProgress {
  border-color: #ff2d26;
}
</style>

<script>
    var questions = [
  { question: "What's your first name?" },
  { question: "What's your last name?" },
  { question: "What's your email?", pattern: /^[^\s@]+@[^\s@]+\.[^\s@]+$/ },
  { question: "What's your phone number ? " },
  { question: "Do you have boy/girl ?" },
  { question: "What school are they learning ?" },
  { question: "What is her/his name ?" },
  { question: "What old are they ? " },
  { question: "Where do you live ?" },
  { question: "What's your prof ?" }
];

/**********

 **********/
(function() {
  var tTime = 100; // transition transform time from #register in ms
  var wTime = 200; // transition width time from #register in ms
  var eTime = 1000; // transition width time from inputLabel in ms

  // init
  // --------------
  var position = 0;

  putQuestion();

  progressButton.addEventListener("click", validate);
  inputField.addEventListener("keyup", function(e) {
    transform(0, 0); // ie hack to redraw
    if (e.keyCode == 13) validate();
  });

  // functions
  // --------------

  // load the next question
  function putQuestion() {
    inputLabel.innerHTML = questions[position].question;// the question 
    console.log(questions[position].question);
    inputField.value = "";
    inputField.type = questions[position].type || "text";
    console.log(questions[position].type || "text" );
    inputField.focus();
    showCurrent();
  }

  // when all the questions have been answered
  function done() {
      console.log("done function");
    // remove the box if there is no next question
    register.className = "close";
    

    // add the h1 at the end with the welcome text
    var h1 = document.createElement("h1");
    h1.appendChild(
      document.createTextNode("Welcome " + questions[0].value + "!")
    );
    setTimeout(function() {
      register.parentElement.appendChild(h1);
      setTimeout(function() {
        h1.style.opacity = 1;
      }, 50);
    }, eTime);
    
      
      
   
    $('input[name = "username"]').val(questions[0].value);
    $('input[name = "lastname"]').val(questions[1].value);
    $('input[name = "email"]').val(questions[2].value);
    $('input[name = "phonenuber"]').val(questions[3].value);
    $('input[name = "sex"]').val(questions[4].value);
    $('input[name = "school"]').val(questions[5].value);
    $('input[name = "childname"]').val(questions[6].value);
    $('input[name = "childage"]').val(questions[7].value);
    $('input[name = "address"]').val(questions[8].value);
    $('input[name = "prof"]').val(questions[9].value);
    document.getElementById("myForm").submit();

  }

  // when submitting the current question
  function validate() {
// set the value of the field into the array
     console.log("this is validate");
     console.log(inputField.value);
    questions[position].value = inputField.value;

    // check if the pattern matches
    if (!inputField.value.match(questions[position].pattern || /.+/)) { wrong(); console.log("wrong in the validate "); }
    else
     console.log("right in the validate ");
      ok(function() {
        // set the progress of the background
        progress.style.width = ++position * 100 / questions.length + "vw";

        // if there is a new question, hide current and load next
        if (questions[position]) { hideCurrent(putQuestion); console.log("right in the second if "); }
        else { hideCurrent(done); console.log("wrong in the second if - there is non questions remain "); }
      });
  }

  // helper
  // --------------

  function hideCurrent(callback) {
    inputContainer.style.opacity = 0;
    inputProgress.style.transition = "none";
    inputProgress.style.width = 0;
    setTimeout(callback, wTime);
  }

  function showCurrent(callback) {
    inputContainer.style.opacity = 1;
    inputProgress.style.transition = "";
    inputProgress.style.width = "100%";
    setTimeout(callback, wTime);
  }

  function transform(x, y) {
    register.style.transform = "translate(" + x + "px ,  " + y + "px)";
  }

  function ok(callback) {
    register.className = "";
    setTimeout(transform, tTime * 0, 0, 10);
    setTimeout(transform, tTime * 1, 0, 0);
    setTimeout(callback, tTime * 2);
  }

  function wrong(callback) {
    register.className = "wrong";
    for (
      var i = 0;
      i < 6;
      i++ // shaking motion
    )
      setTimeout(transform, tTime * i, ((i % 2) * 2 - 1) * 20, 0);
    setTimeout(transform, tTime * 6, 0, 0);
    setTimeout(callback, tTime * 7);
  }
})();



</script>

<!--<form action="/register" method="post">-->
<!--   <input type="text" name="username" placeholder="username">-->
<!--    <input type="text" name="lastname" placeholder="lastname">-->
<!--    <input type="text" name="email" placeholder="email">-->
<!--    <input type="text" name="phonenuber" placeholder="phonenuber">-->
<!--    <input type="text" name="sex" placeholder="sex">-->
<!--    <input type="text" name="school" placeholder="school">-->
<!--    <input type="text" name="childname" placeholder="childname">-->
<!--    <input type="text" name="childage" placeholder="childage">-->
<!--    <input type="text" name="address" placeholder="address">-->
<!--    <input type="text" name="prof" placeholder="prof">-->
<!--    <button>Sign Up</button>-->
<!--</form>-->
<% include ./partials/footer %> 

